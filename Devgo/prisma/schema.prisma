datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String      @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  role          Roles       @default(utilisateur)
  abonnement    Abonnement?
  plan          Plan        @default(free)
  clientId      String?     @unique

  createdAt DateTime
  updatedAt DateTime
  sessions  Session[]
  accounts  Account[]

  @@unique([email])
  @@map("user")
}

model Abonnement {
  id        String         @id @default(cuid())
  userId    String         @unique
  plan      Plan
  periode   PlanAbonnement
  datedebut DateTime       @default(now())
  datefin   DateTime       @updatedAt
  user      User           @relation(fields: [userId], references: [id])
}

enum Roles {
  Admin
  utilisateur
}

enum Plan {
  free
  pro
}

enum PlanAbonnement {
  mois
  ann√©e
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
